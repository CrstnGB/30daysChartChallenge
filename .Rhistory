library(dplyr)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se usará la librería igraph
library(igraph)
library(dplyr)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
setwd("~/5- Educación/6- Master Universitario en Big Data y Ciencias de Datos/2- Asignaturas/7. Visualización de datos/2. Actividades/Actividad1/30daysChartChallenge")
#Se usará la librería igraph
library(igraph)
library(dplyr)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Fuel_Type, Price)
#Se discretiza la columna de precio en cuartiles
df1 <- df1 %>%
mutate(Discreted_price = ntile(Price, 4)) %>%
select(-Price) #Se elimina la columna Price
#Se eliminan duplicados
df1 <- na.omit(unique(df1))
# Crear el gráfico de red usando igraph
grafo_familiar <- graph_from_data_frame(df1, directed = FALSE)
# Configurar los colores de los nodos
V(grafo_familiar)$color <- ifelse(V(grafo_familiar)$name %in%
c("1", "2", "3", "4"), "salmon", "lightgreen")
# Dibujar el gráfico de la familia
plot(grafo_familiar,
vertex.size = 15,
vertex.label.cex = 1,
vertex.label.color = "black",  # Color del texto
vertex.frame.color = NA,  # Sin borde en los nodos
main = "Red Familia Precios")
# Añadir la leyenda personalizada
legend("bottomleft",
layout.layout_as_tree,                    # Posición de la leyenda
legend = c("Familia de Precios:
1: Precio Bajo \n
2: Precio Bajo-Medio \n
3: Precio Medio-Alto \n
4: Precio Alto",
"Familias de Fuel"),  # Etiquetas
col = c("salmon", "lightgreen"),              # Colores de los nodos
pch = 19,                                     # Forma de los puntos
pt.cex = 2,                                   # Tamaño de los puntos
cex = 0.8,                                    # Tamaño del texto
bty = 'n')
view(df)
View(df)
View(df)
unique(df$Year)
sort(unique(df$Year))
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Price)
plot(df1)
ggplot(df1, aes(Year, Price))
library(ggplot)
library(ggplot2)
ggplot(df1, aes(Year, Price))
ggplot(df1, aes(Year, Price)) +
geom_line()
ggplot(df1, aes(Year, Price)) +
geom_point()
ggplot(df1, aes(Year, Price)) +
geom_point() +
stat_smooth()
ggplot(df1, aes(Year, Price)) +
geom_point() +
stat_smooth(method = 'lm')
ggplot(df1, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
ggplot(df1, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm')
any(is.na(df))
colSums(is.na(df))
dim(df)
df1 <- na.omit(df1)
ggplot(df1, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm')
any(is.na(df))
any(is.na(df1))
ggplot(df1, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm') +
scale_color_brewer(palette = 'Set3')
df1[, Price]
unique(df$Fuel_Type)
fuel_types <- unique(df$Fuel_Type)
type(fuel_types)
class(fuel_types)
class(fuel_types)
fuel_types <- c(unique(df$Fuel_Type))
class(fuel_types)
fuel_types
fuel_types <- c(unique(df$Fuel_Type))
fuel_types
len(df_)
length(df_)
for (fuel_type in fuel_types):
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
length(df_)
}
print(length(df_))
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
print(length(df_))
}
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
print(n_row(df_))
}
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
print(nrow(df_))
}
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("Cantidad de filas para", fuel_type, ":", nrow(df_))
}
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("Cantidad de filas para", fuel_type, ":", nrow(df_), "\n")
}
df1 %>%
filter(Fuel_Type == 'Electric') %>%
select(Fuel_Type)
df1 %>%
filter(Fuel_Type == 'Electric')
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("Cantidad de filas para", fuel_type, ":", nrow(df_), "\n")
}
df1 <- na.omit(df1)
fuel_types <- c(unique(df$Fuel_Type))
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("Cantidad de filas para", fuel_type, ":", nrow(df_), "\n")
}
df1 %>%
filter(Fuel_Type == 'Electric')
df1 %>%
filter(Fuel_Type == 'LPG')
df1 %>%
filter(Fuel_Type == 'Diesel')
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("Cantidad de filas para", fuel_type, ":", nrow(df_), "\n")
}
df2 <- df1 %>%
filter(Fuel_Type == 'Diesel' | Fuel_Type == 'Petrol')
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm') +
scale_color_brewer(palette = 'Set3')
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("% de instancias para", fuel_type, ":",
round((nrow(df_) / nrow(df1)) * 100, 2), "\n")
}
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("% de instancias para", fuel_type, ":",
round((nrow(df_) / nrow(df1)) * 100, 2), "%\n")
}
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3')
install.packages("ggthemes", dependencies = TRUE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized()
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized()
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized2()
library(ggthemes)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized2()
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized()
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm') +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
scale_y_log10() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
scale_y_log10() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
stat_smooth(method = 'lm') +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE)
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("% de instancias para", fuel_type, ":",
round((nrow(df_) / nrow(df1)) * 100, 2), "%\n")
}
library(ggthemes)
#Se filtra solo por los más representativos
df2 <- df1 %>%
filter(Fuel_Type == 'Diesel' | Fuel_Type == 'Petrol')
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "Evolución de precios en los diferentes tipos de coches según el Fuel",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)"
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "Evolución de precios en los diferentes tipos de coches según el Fuel",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("% de instancias para", fuel_type, ":",
round((nrow(df_) / nrow(df1)) * 100, 2), "%\n")
}
library(ggthemes)
#Se filtra solo por los más representativos
df2 <- df1 %>%
filter(Fuel_Type == 'Diesel' | Fuel_Type == 'Petrol')
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "Evolución de precios en los diferentes tipos de coches según el Fuel",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "Evolución de precios en los diferentes tipos de coches según el Fuel",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
install.packages("patchwork")
install.packages("patchwork")
library(patchwork)
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "Evolución de precios en los diferentes tipos de coches según el Fuel",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
cat("% de instancias para", fuel_type, ":",
round((nrow(df_) / nrow(df1)) * 100, 2), "%\n")
}
library(ggthemes)
library(patchwork)
#Se filtra solo por los más representativos
df2 <- df1 %>%
filter(Fuel_Type == 'Diesel' | Fuel_Type == 'Petrol')
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "Evolución de precios en los diferentes tipos de coches según el Fuel",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "¿Qué me costará más, Diesel o Gasolina (Petrol)?",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth() +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "¿Qué me costará más, Diesel o Gasolina (Petrol)?",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
geom_point() +
stat_smooth(method = 'lm') +
scale_x_log10() +
scale_y_log10() +
scale_color_brewer(palette = 'Set3') +
theme_solarized(light = FALSE) +
plot_annotation(title = "¿Qué me costará más, Diesel o Gasolina (Petrol)?",
caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
ggplot(x = fuel_types,y = ctd_datos)
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
ctd_datos <- c()
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
ctd_datos <- append(ctd_datos, nrow(df_))
ggplot(x = fuel_types,y = ctd_datos)
}
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
ctd_datos <- c()
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
ctd_datos <- append(ctd_datos, nrow(df_))
ggplot(x = fuel_types,y = ctd_datos)
df_to_plot <- data.frame(fuel_types, ctd_datos)
df_to_plot
ctd_datos <- append(ctd_datos, nrow(df_))
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
ctd_datos <- c()
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
ctd_datos <- append(ctd_datos, nrow(df_))
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
ctd_datos <- append(ctd_datos, nrow(df_))
}
df_to_plot <- data.frame(fuel_types, ctd_datos)
df_to_plot
df_to_plot <- data.frame(fuel_types, ctd_datos)
View(df_to_plot)
ctd_datos
print(ctd_datos)
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')
#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)
#Se eliminan valores faltantes
df1 <- na.omit(df1)
#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
ctd_datos <- c()
for (fuel_type in fuel_types){
df_ <- df1 %>%
filter(Fuel_Type == fuel_type) %>%
select(Fuel_Type)
ctd_datos <- append(ctd_datos, nrow(df_))
}
print(ctd_datos)
ctd_datos
View(df_to_plot)
ggplot(x = fuel_types,y = ctd_datos)
fuel_types
View(df1)

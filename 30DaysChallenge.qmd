---
title: "30DaysChanllenge"
author: "Cristian Guerrero Balber"
format: html
editor: visual
---

## Categoría: "Comparisons"

### Día 1: Part-to-Whole

<iframe title="¿Cómo se distribuye la riqueza mundial por sectores?" aria-label="Donut Chart" id="datawrapper-chart-N4Zj2" src="https://datawrapper.dwcdn.net/N4Zj2/1/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="608" data-external="1">

</iframe>

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>

**Audiencia:** Grupo de estudiantes de economía\
**Objetivo:** Mostrar los sectores industriales donde se genera más riqueza con todas las posibilidades de estrategia que ello conlleva, como la inversión o el estudio de un sector u otro.\
**Visualización:** Herramienta Datawrapper para realizar un gráfico de rosquilla, convirtiendo los valores netos a porcentajes.\
**Conjunto de datos:** Se realiza una agregación por sector industrial sumando los valores netos por cada registro. La fuente de datos es la siguiente: [https://www.kaggle.com/datasets/muhammadehsan02/top-1000-wealthiest-people-in-the-world/data](#0){.uri}

### Día 2: Neo

<iframe title="¿Quién quiere ser millonario? ¡Top 10 de las personas más ricas del mundo en 2024!" aria-label="Bar Chart" id="datawrapper-chart-n7LNH" src="https://datawrapper.dwcdn.net/n7LNH/2/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="379" data-external="1">

</iframe>

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>

**Audiencia:** Grupo de estudiantes de economía\
**Objetivo:** Informar sobre quiénes son las personas que dominan el planeta económicamente y las cantidades de sus riquezas.\
**Visualización:** Herramienta Datawrapper para realizar un gráfico de barras horizontal.\
**Conjunto de datos:** De nuevo, el origen de los datos es el mismo que antes: [https://www.kaggle.com/datasets/muhammadehsan02/top-1000-wealthiest-people-in-the-world/data](#0){.uri}. Se realiza una agregación por nombre de persona y sumando sus riquezas, las cuales pueden proceder de diferentes sectores industriales y, por lo tanto, la misma persona puede aparecer en más de un registro.

### Día 3: Makeover

![Gráfico generado en PowerBI](external_images/D3.png)

**Audiencia:** Grupo de estudiantes de economía\
**Objetivo:** Mostrar los sectores industriales donde se genera más riqueza con todas las posibilidades de estrategia que ello conlleva, como la inversión o el estudio de un sector u otro.\
**Visualización:** En esta ocasión, se crea un gráfico muy visual y espectacular usando IA Generativa en base a la gráfica del primer día. El gran inconveniente de este tipo de herramientas para la creación de gráficas es el bajo control que se tiene sobre lo que aparece en la imagen por mucho que se refina el *prompt*. Por ejemplo, se ha distorsionado algunas etiquetas de sectores así como los valores asociados. Es decir, es una herramienta muy potente y espectacular pero aún mejorable desde el punto de vista del control.\
**Conjunto de datos:** Se utiliza como *prompt* la imagen gráfica del día 1 (Part-to-whole) además del siguiente texto: "Create an image of a pie chart with an original style, including 3D figures related to each industrial sector. The sectors should be represented as follows: Technology (35%) with images such as computers or smartphones, Retail (23%) with images like shopping bags or a storefront, Manufacturing (10%) with icons like gears or a factory, Telecommunications (6%) with symbols such as satellite dishes or cell towers, Media (6%) with elements like film reels or cameras, and Other (22%) with assorted icons that represent various industries. Include the labels with words of sectors and percentages and ensure that they are clear and undistorted."

### Día 4: Waffle

```{r message = FALSE, warning = FALSE}
# Instalar y cargar los paquetes
library(waffle)

# Datos
dataset <- read.csv("datasets\\Top_1000_wealthiest_people_d4.csv")

#Se convierten los datos a un vector nombrado
valores <- (setNames(dataset$Net.Worth..in.billions., dataset$Company))

# Crear el gráfico de waffle
waffle_chart <- waffle(valores, rows = 10, size =1,
                       colors = rainbow(length(valores))) +
  labs(title = "Distribución de la riqueza mundial por empresas", subtitle = "Gráfico de waffle de 100 unidades")


# Mostrar el gráfico
waffle_chart

```

**Audiencia:** Grupo de estudiantes de economía\
**Objetivo:** Mostrar la distribución de empresas que generan más riquezas a las personas más ricas del planeta. Cuanto más riqueza genera, más cuadrados de color tiene asociado.\
**Visualización:** Se utiliza un waffle chart utilizando la librería de R "waffle".\
**Conjunto de datos:** El origen de los datos sigue siendo el mismo: [https://www.kaggle.com/datasets/muhammadehsan02/top-1000-wealthiest-people-in-the-world/data](#0){.uri}. En esta ocasión, se realiza una agregación por empresas sumando el valor de la riqueza. Además, se normalizan los datos calculando la proporción sobre 100 de cada empresa y convirtiéndolas en un número entero para obtener este tipo de dato, necesario en tipo y forma para este tipo de gráfica.

### Día 5: Diverging

```{r, message = FALSE, warning = FALSE}
library(ggplot2)

# Datos de ejemplo
datos <- read.csv("datasets\\Inequality in Income Spain Comparison_d5.csv")

datos$Desigualdad <- ifelse(datos$Inequality.in.income..2021. > 0, "Mayor desigualdad que España", "Menor desigualdad que España")

# Crear el gráfico
ggplot(data = datos, aes(x = reorder(Country, Inequality.in.income..2021.), 
                          y = Inequality.in.income..2021., 
                          fill = Desigualdad)) +
  geom_bar(stat = "identity", width = 0.5, color = "black") +
  coord_flip() +  
  scale_fill_manual(values = c("pink", "lightblue")) +
  labs(title = "¿Qué países enfrentan una mayor desigualdad de ingresos en comparación con España?",
       x = "País",
       y = "Diferencia de GINI con respecto a España",
       fill = "Diferencia de desigualdad en ingresos") +
  theme_minimal() + 
  theme(panel.spacing = unit(100, "lines"),
        plot.title = element_text(size = 9, face = "bold")) 

```

**Audiencia:** Grupo de estudiantes de economía\
**Objetivo:** Concienciar de la posición que ocupa España con respecto al resto de países del mundo en relación a la desigualdad de ingresos de sus habitantes.\
**Visualización:** Se utiliza la librería "ggplot2" de R. El gráfico elegido es un gráfico horizontal de barras modificando los colores en función de si es mejor o peor el resultado en comparación con España.\
**Conjunto de datos:** <https://www.kaggle.com/datasets/iamsouravbanerjee/inequality-in-income-across-the-globe>. Se modifica la columna "Inequality in income (2021)", donde se muestra el GINI por país, para calcular cada una con respecto a España, restándole el valor GINI de España a cada valor GINI del resto de los países. De esta manera, se consigue el efecto deseado y se puede realizar una comparación con el país de interés.

### Día 6: OECD (data day)

![Gráfico generado en PowerBI](external_images/D6.png)

**Audiencia:** Grupo de estudiantes de economía\
**Objetivo:** Resaltar aquellos continentes con una mayor desigualdad en cuanto a ingresos en sus países.\
**Visualización:** Se realiza a través de **PowerBI**. Se usa una gráfica de embudo con un degradado de colores para mostrar los resultados de "peor" (mayor GINI promedio) a "mejor" (menor GINI promedio).\
**Conjunto de datos:** Se usa el mismo dataset del día anterior: [https://www.kaggle.com/datasets/iamsouravbanerjee/inequality-in-income-across-the-globe](#0){.uri}. En esta ocasión, se ha realizado el promedio de todos los paises por continente y se ha ordenado de mayor a menor.

## Categoría: "Distributions"

### Día 7: Hazards

```{python message = FALSE, warning = FALSE}
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Se carga el dataset
df = pd.read_csv("datasets//annual_deaths_by_causes.csv")

# Se realizan las transformaciones adecuadas para la correcta visualización
df = df[df.code != "OWID_WRL"]
cols_causes = df.columns[3:]
df = pd.melt(df,id_vars = ['country', 'code'],value_vars = cols_causes,var_name = "cause_of_death",value_name = "number_of_people")
df = df.groupby('cause_of_death')['number_of_people'].sum().reset_index()
df.sort_values(by = 'number_of_people', ascending = False, inplace = True)
df.reset_index(drop = True, inplace = True)

# Cálculo de características del boxplot
Q1 = df.number_of_people.quantile(0.25)
Q3 = df.number_of_people.quantile(0.75)
IQR = Q3 - Q1
lim_sup = Q3 + IQR * 1.5
lim_inf = Q1 - IQR * 1.5

# Identifico los outliers
outliers = df[(df.number_of_people > lim_sup) | (df.number_of_people < lim_inf)]

# Se carga el tema "pastel" de sns
sns.set_theme(style="ticks", palette="pastel")
# Se pinta el boxplot
sns.boxplot(y="number_of_people", data=df, palette = ["g"], legend = False)
plt.title("Distribución de muertes mundiales acumuladas por tipo de enfermedad (1990-2019)")

# Etiqueto los outliers
for i, row in outliers.iterrows():
  plt.text(-0.02, row.number_of_people, f'{row.cause_of_death}', color = 'black',
           ha = 'right', va = 'center', fontsize = 8)
# Muestro la figura
plt.show()


```

**Audiencia:** Grupo de Médicos del Hospital Universitario Puerta del Mar en Cádiz, España\
**Objetivo:** Se pretende mostrar la distribución de número acumulado de causas de muerte desde 1990 hasta 2019 con el fin de determinar si existen ciertas enfermedades que, en comparación con el resto, tienen una incidencia mucho más alta o baja.\
**Visualización:** Se utiliza la librería **matplotlib.pyplot** junto con **seaborn** de **python**. Se escoge un gráfico **boxplot**, ideal para identificar visualmente outliers.\
**Conjunto de datos:** <https://www.kaggle.com/datasets/madhurpant/world-deaths-and-causes-1990-2019>. Previo al graficado de datos, se ha de calcular programáticamente los outliers para que puedan ser etiquetados en el boxplot. De esta manera, la audiencia puede identificar fácilmente aquellas enfermedades que están fuera de la normalidad.

### Día 8: Circular

```{r message = FALSE, warning = FALSE}
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(tidyverse)

#Obtengo el dataframe del csv
df <- read.csv("datasets\\annual_deaths_by_causes.csv")

#Extraigo todas las columnas de las causas de muerte
cols_causes <- names(df)[4:ncol(df)]

#Se transforma el dataframe
df_transformed <- df %>%
  pivot_longer(cols = cols_causes, 
               names_to = "cause_of_death",
               values_to = "number_of_people") %>%
  filter(country == "Spain")  %>%
  group_by(cause_of_death) %>%
  summarise(total_people = sum(number_of_people)) %>%
  arrange(desc(total_people)) %>%
  drop_na()

#Se añaden los porcentajes
total_sum <- sum(df_transformed$total_people)
df_transformed <- df_transformed %>%
  mutate(percentage = round((total_people / total_sum)*100, 0))
#Se divide el df en dos partes: las primeras 5 filas y el resto
df_top5 <- df_transformed[1:5, ]
df_others <- df_transformed[6:nrow(df), ]

#Sumar los valores de otros
df_others_summary <- df_others %>%
  summarise(cause_of_death = "Others",
            total_people = sum(total_people, na.rm = TRUE),
            percentage = sum(percentage, na.rm = TRUE))

#Se combinan los primeros 5 valores y el grupo "Otros"
df_final <- bind_rows(df_top5, df_others_summary)

#Se realiza un gráfico de sectores con etiquetas fuera del gráfico

# Obtener las posiciones
df2 <- df_final %>% 
  mutate(csum = rev(cumsum(rev(percentage))), 
         pos = percentage/2 + lead(csum, 1),
         pos = if_else(is.na(pos), percentage/2, pos))

ggplot(df_final, aes(x = "" , y = percentage, fill = fct_inorder(cause_of_death))) +
  geom_col(width = 1, color = 1) +
  coord_polar(theta = "y") +
  scale_fill_brewer(palette = "Pastel1") +
  geom_label_repel(data = df2,
                   aes(y = pos, label = paste0(percentage, "%")),
                   size = 4.5, nudge_x = 1, show.legend = FALSE) +
  guides(fill = guide_legend(title = "Grupo")) +
  ggtitle("Distribución de Causas de Muerte en España") +
  theme_void() 
```

**Audiencia:** Grupo de Médicos del Hospital Universitario Puerta del Mar en Cádiz, España\
**Objetivo:** Focalizar los esfuerzos de investigación para las enfermedades más relevantes\
**Visualización:** Se utiliza ggplot2 con la librería ggrepel. Con esto se consigue un gráfico de sectores con el etiquetado fuera del propio gráfico con una visualización, como resultado, más clara.\
**Conjunto de datos:** Origen: <https://www.kaggle.com/datasets/madhurpant/world-deaths-and-causes-1990-2019>. Se necesita transformar el dataset original cambiando la estructura, pasando las columnas de las enfermedades a una sola columna como "causes_of_death" y sus valores a otra columna llamada "number_of_people". A partir de aquí, se realizan transformaciones varias de limpieza, agregaciones y sumas, para obtener los valores mostrados. Se comprueba que España tiene una distribución similar a la mundial, dado que las tres grandes enfermedades que afectan a este país son las mismas.

### Día 9: Major/Minor

![Gráfico generado en PowerBI](external_images/D9.png)

**Audiencia:** Grupo de Médicos del Hospital Universitario Puerta del Mar en Cádiz, España\
**Objetivo:**  Mostrar los países con mayor y menor incidencia en muertes debido a neoplasia (cáncer) en 2019 con el fin de reflexionar sobre qué puede llevar a dichos países a alcanzar estas cifras. **Visualización:** **PowerBI**. Se escoge dos visualizaciones de tipo **Tarjeta** para mostrar el país así como la cifra de incidencias por cada 100 mil habitantes.\
**Conjunto de datos:** <https://www.kaggle.com/datasets/madhurpant/world-deaths-and-causes-1990-2019>, <https://worldpopulationreview.com/>. Para poder realizar dicha visualización, con PowerBI se importan los datos preprocesados desde Python realizando un derretido de las columnas de enfermedades. Luego, se crean campos calculados para mostrar los datos deseados, el país con mayor/menor número de muertes por cada 100 mil habitantes y la cifra. Además, se añaden ciertos filtros para que solo se tenga en cuenta la enfermedad de neoplasia y el año 2019 (fecha más actual de la que se tienen datos).

### Día 10: Physical

<iframe title="Muertes por enfermedades cardiovasculares por país en 2010" aria-label="Map" id="datawrapper-chart-izgyy" src="https://datawrapper.dwcdn.net/izgyy/2/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="458" data-external="1">

</iframe>

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>
<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>

**Audiencia:** Grupo de Médicos del Hospital Universitario Puerta del Mar en Cádiz, España\
**Objetivo:** Transmitir una visión general de la distribución de afección de la enfermedad con la incidencia más alta de muertes en el planeta.\
**Visualización:** **Datawrapper**. Así como los mapas físicos muestran con colores las propiedades físicas de un mapa, se utiliza el mismo concepto para mostrar la incidencia de muertes por enfermedades cardiovasculares por país (por cada 100 mil habitantes).\
**Conjunto de datos:** <https://www.kaggle.com/datasets/madhurpant/world-deaths-and-causes-1990-2019>, <https://worldpopulationreview.com/>. Para poder realizar dicha visualización, primero se preprocesan los datos con Python realizando un derretido de las columnas de enfermedades. Luego, se importan los datos a PowerBI, donde se realizará una conexión entre dos tablas de dos fuentes de datos diferentes (mencionadas anteriormente). Estas tienen como campo identificativo el país. A partir de aquí, se puede añadir la cantidad de habitantes por país y realizar el cálculo de número de muertes por cada 100 mil habitantes. Además, se añaden ciertos filtros para que solo se tenga en cuenta las enfermedades cardiovasculares y el año 2010 (fecha más actual de la que se tienen datos para combinar en ambos datasets). Una vez se preprocesan los datos, se importan a Datawrapper para poder crear el mapa interactivo y poder embeberlo en RStudio con Quarto.

### Día 11: Mobile-friendly

<iframe title="Muertes por Enfermedades Crónicas Respiratorias" aria-label="Table" id="datawrapper-chart-tefuF" src="https://datawrapper.dwcdn.net/tefuF/1/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="795" data-external="1">

</iframe>

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>

**Audiencia:** Grupo de Médicos del Hospital Universitario Puerta del Mar en Cádiz, España\
**Objetivo:**\
**Visualización: Datawrapper.** Se usa esta herramienta por tener la opción de embeber de forma interactiva y, además, hacerlo adaptativo para móviles. Para ello, se ha optado por una visualización en tabla con degradado por gravedad de incidencia. Para hacerlo "mobile-friendly" se activan las opciones "Mobile fallback" y "Compact layout". Además, se le da interactividad mediante la activación de búsqueda de países mediante la opción "Make searchable".\
**Conjunto de datos:** <https://www.kaggle.com/datasets/madhurpant/world-deaths-and-causes-1990-2019>, <https://worldpopulationreview.com/>. Para esta visualización, se aprovecha todo el procesamiento de las gráficas anteriores con la diferencia que se ha filtrado por una enfermedad distinta, "chronic_respiratory_diseases", que es la tercera con más incidencia en el planeta.

### Día 12: Reuters Graphics (theme day)

<iframe title="Evolución de causas de muertes a nivel mundial desde 1990 hasta 2019" aria-label="Interactive line chart" id="datawrapper-chart-DQaw5" src="https://datawrapper.dwcdn.net/DQaw5/5/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="445" data-external="1">

</iframe>

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>

**Audiencia:** Grupo de Médicos del Hospital Universitario Puerta del Mar en Cádiz, España\
**Objetivo:** Reflexionar sobre qué es lo que está ocurriendo en el mundo para que el número de fallecidos mundiales a causa de ciertas enfermedades haya aumentado en las últimas décadas.\
**Visualización: Datawrapper**. Se usa un gráfico de líneas para visualizar la evolución de las enfermedades. Al usar esta herramienta embebida, se da la posibilidad a la audiencia de revisar los datos de forma interactiva.\
**Conjunto de datos:** [https://www.kaggle.com/datasets/madhurpant/world-deaths-and-causes-1990-2019](#0){.uri}. Se preparan los datos eliminando las columnas de "country" y de "code". Además, se realiza una agrupación por "year" para graficar la evolución. Se calcula la media del ratio de crecimiento de la población mundial en base a <https://worldpopulationreview.com/>.

## Categoría: "Relationships"

### Día 13: Family

```{r message = FALSE, warning = FALSE}
#Se usará la librería igraph
library(dplyr)
library(ggplot2)

# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')

#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)

#Se eliminan valores faltantes
df1 <- na.omit(df1)

#Se grafica la cantidad de datos existentes según el tipo de Fuel
library(ggthemes)
library(patchwork)
library(scales)
ggplot(df1, aes(Year, fill = Fuel_Type)) +
  geom_bar(position = 'fill') + 
  scale_y_continuous(labels = percent) +
  theme_solarized() +
  plot_annotation(title = "¿Qué tipo de coche según el tipo de Fuel predomina más?",
                  caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")

```

**Audiencia:** Conferencia sobre Energía sostenible

**Objetivo:** Mostrar la cantidad de instancias por familia de Fuel. Esta visualización quiere mostrar el reflejo de la proporción de coches según el Fuel que existen (ojo, esto puede setar sesgado por la fuente de datos).

**Visualización:** Se utiliza la de la librería *ggplot* de *R*. Se usa la extensión *ggtheme* para darle un aspecto visual atractivo y original. Además, se usa el gráfico de barras apiladas para mostrar la proporción de instancias optimizando la cantidad de código.

**Conjunto de datos:** Se procesan los datos simplemente seleccionando las características a vincular y limpiándo el df resultante de nulos. Fuente: https://www.kaggle.com/datasets/ayushparwal2026/cars-dataset/data

### Día 14: Heatmap

```{r message = FALSE, warning = FALSE}
#Se usará la librería ggplot2
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggthemes)

# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')

#Se seleccionan las características a comparar
df1 <- select(df, Year, Kilometers_Driven, Fuel_Type, Transmission, 
              Owner_Type, Seats, Price)

#Se realiza una codificación de características no numéricas
# Supongamos que df es tu dataset y 'columna_categorica' es una columna no numérica
df1$Fuel_Type <- as.numeric(as.factor(df1$Fuel_Type))
df1$Transmission <- as.numeric(as.factor(df1$Transmission))
df1$Owner_Type <- as.numeric(as.factor(df1$Owner_Type))

#Se calcula la matriz de correlaciones
df_corr <- cor(df1, use = "complete.obs")

#Se convierte la matriz a formato largo
df_corr <- melt(df_corr)

# Crear el gráfico de la matriz de correlaciones
ggplot(data = df_corr, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                       limit = c(-1, 1), name = "Coef. de Pearson") +
  geom_text(aes(label = round(value, 2)),  # Redondear y mostrar los valores
            color = "black",               # Color del texto
            size = 4)  +
  theme_pander() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "¿Qué característica tiene mayor correlación sobre el precio?", 
       x = "Características", 
       y = "Características",
       caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)") +
  theme(plot.title = element_text(size = 10))

```

**Audiencia:** Conferencia sobre Energía sostenible **Objetivo:** Mostrar las diferentes correlaciones entre distintas características y el precio. Concretamente, y en el tipo de conferencia que es, parece ser que el tipo de fuel y el precio no tiene una correlación lineal demasiado alta, mientras que la característica que tiene una mayor correlación con el precio es el tipo de transmisión. **Visualización:** Se utiliza un *heatmap* de *ggplot2* en *R* **Conjunto de datos:** Se procesan los datos seleccionando las características a correlacionar. Se codifica en forma de número las columnas que no tienen un valor numérico. Luego, se obtiene la matriz de correlaciones y, por último, se grafica. Fuente: https://www.kaggle.com/datasets/ayushparwal2026/cars-dataset/data

### Día 15: Historical

```{r message = FALSE, warning = FALSE}
#Se usará la librería igraph
library(dplyr)
library(ggplot2)

# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')

#Se seleccionan las instancias a graficar
df1 <- select(df, Year, Fuel_Type, Price)

#Se eliminan valores faltantes
df1 <- na.omit(df1)

#Se itera entre los distintos tipos de fuel para ver si hay una cantidad
#suficientemente representativa de cada uno para graficar
fuel_types <- c(unique(df$Fuel_Type))
for (fuel_type in fuel_types){
  df_ <- df1 %>%
        filter(Fuel_Type == fuel_type) %>%
        select(Fuel_Type)
  cat("% de instancias para", fuel_type, ":", 
      round((nrow(df_) / nrow(df1)) * 100, 2), "%\n")
}

library(ggthemes)
library(patchwork)
#Se filtra solo por los más representativos
df2 <- df1 %>%
  filter(Fuel_Type == 'Diesel' | Fuel_Type == 'Petrol')

ggplot(df2, aes(Year, Price, colour = Fuel_Type)) +
  geom_point() + 
  stat_smooth(method = 'lm') +
  scale_x_log10() +
  scale_y_log10() +
  theme_solarized(light = FALSE) +
  labs(title = "¿Qué me costará más, Diesel o Gasolina (Petrol)?",
       caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
```

**Audiencia:** Conferencia sobre Energía sostenible

**Objetivo:** Mostrar la evolución del precio en los últimos años de los coches de tipo Diesel y Gasolina.

**Visualización:** Se usa *RStudio* con *ggplot*, con un estilo de la extensión *ggthemes*. Además, se visualiza por colores los distintos tipos de Fuel. Se ha usado la transformación logaritmica para minimizar el efecto visual de los outliers.

**Conjunto de datos:** Se procesan los datos seleccionando las características a graficar. Se seleccionan los tipos de fuel más representativos en el dataset. Fuente: https://www.kaggle.com/datasets/ayushparwal2026/cars-dataset/data

### Día 16: Weather

```{r message = FALSE, warning = FALSE}
#Se usará la librería igraph
library(dplyr)
library(ggplot2)

# Se carga el df
df <- read.csv('datasets\\2021.Vans_Aggregated.csv')

#Se grafica la cantidad de datos existentes según el tipo de Fuel
library(ggthemes)

ggplot(df, aes(Fuel.Type, WLTP.CO2.emissions.weighted..g.km., fill = Fuel.Type)) +
  geom_violin() + 
  geom_boxplot(width = 0.05) +
  theme_economist() +
  scale_fill_discrete(labels = c('Diesel', 'Gasolina', 'Híbrido'),
                      name = 'Tipo de combustible') +
  theme(axis.text.x = element_blank(),
        legend.position = 'right') +
  labs(y = "Emisiones CO2 emitidas en g/km",
       title = "¿Qué tipo de coche según el Fuel predomina más?",
       caption = "Cristian Guerrero Balber| Datos: real-world-vehicle-emissions.csv (kaggle)")
```

**Audiencia:** Conferencia sobre Energía sostenible

**Objetivo:** Mostrar la gran diferencia de la distribución de emisiones de CO2

**Visualización:** *RStudio* con *ggplot*. Se usa un gráfico de violines junto con boxplots, que muestra no solo la distribución de datos sino la densidad de los mismos por categorías. Se muestra claramente como la distribución de las emisiones de los coches híbridos es, de media, 3 veces más baja que las de diesel y gasolina. Además, la varianza de los datos es menor con cero outliers y bigotes de boxplots muy cortos.

**Conjunto de datos:** No se realiza preprocesado de los datos salvo su carga y su visualización, ya que este tipo de visualización incorpora el propio tratamiento de los datos. Fuente: https://www.kaggle.com/datasets/konradb/real-world-vehicle-emissions

### Día 17: Networks

```{r message = FALSE, warning = FALSE}
#Se usará la librería igraph
library(igraph)
library(dplyr)

# Se carga el df
df <- read.csv('datasets\\used_cars_data.csv')

#Se seleccionan las instancias a graficar
df1 <- select(df, Fuel_Type, Price)

#Se discretiza la columna de precio en cuartiles
df1 <- df1 %>%
  mutate(Discreted_price = ntile(Price, 4)) %>%
  select(-Price) %>% #Se elimina la columna Price
  mutate(Discreted_price = recode(Discreted_price,
    "1" = "Bajo",
    "2" = "Bajo-Medio",
    "3" = "Medio-Alto",
    "4" = "Alto"
  ) )

#Se eliminan duplicados
df1 <- na.omit(unique(df1))

# Crear el gráfico de red usando igraph
grafo <- graph_from_data_frame(df1, directed = FALSE)

layout <- layout_with_sugiyama(grafo)

# Configurar los colores de los nodos
V(grafo)$color <- ifelse(V(grafo)$name %in% 
c("Bajo", "Bajo-Medio", "Medio-Alto", "Alto"), "salmon", "lightgreen")

# Dibujar el gráfico de la familia
plot(grafo,
     layout = layout,
     vertex.size = 50, 
     vertex.label.cex = 0.8,
     vertex.label.color = "black",  # Color del texto
     vertex.frame.color = NA,  # Sin borde en los nodos
     main = "Red Familia Precios")
legend("bottomleft",
       legend = c("CNG = Compressed Natural Gas",
                  "LPG = Gas Licuado de Petróleo"),
       cex = 0.8,
       bty = 'n')

```

**Audiencia:** Conferencia sobre Energía sostenible

**Objetivo:** Mostrar relaciones en forma de red de precios según el tipo de fuel. Concretamente, concienciar que no existen conexiones entre la energía eléctrica y los coches de precios asequibles según este dataset.

**Visualización:** Se utiliza la de la librería *igraph* de *R* un tipo de gráfico concreto para establecer relaciones en redes. Ideal para mostrar relaciones entre tipo o familias de características.

**Conjunto de datos:** Se procesan los datos seleccionando las características a vincular y limpiándo el df resultante de nulos. Además, se discretiza la columna *Price* para obtener una escala cualitativa del precio y poder relacionarla con el tipo de fuel. Fuente: https://www.kaggle.com/datasets/ayushparwal2026/cars-dataset/data

### Día 18: Asian Development Bank (data day)

```{r message = FALSE, warning = FALSE}
#Se usará la librería igraph
library(dplyr)
library(ggplot2)
library(lubridate)
library(tvthemes)

# Se carga el df
df <- read.csv('datasets\\ADB Climate Change Financing - 2023-based on commitments.csv')

#Se transforma la columna de fecha de texto a fecha, y se limpia el df de nulos
df1 <- df %>%
  select(Date.Signed, Sector, Signed.amount....million.) %>%
  mutate(Signed.amount = suppressWarnings(as.numeric(Signed.amount....million.))) %>%
  select(-Signed.amount....million.)%>%
  mutate(Date.Signed = parse_date_time(Date.Signed, orders = 'd-b-y')) %>%
  mutate(Date.Signed = as.Date(Date.Signed))%>%
  arrange(Date.Signed) %>%
  na.omit()

#Se cambia la fecha a semanas
df1 <- df1 %>%
  mutate(Week.Signed = floor_date(Date.Signed, "week"))%>%
  group_by(Week.Signed, Sector) %>%
  summarise(Signed.amount = sum(Signed.amount)) %>%
  ungroup()

#Se calcula el acumulado por semana y sector
df1 <- df1 %>%
  group_by(Sector) %>%                         
  mutate(Signed.amount.cumsum = cumsum(Signed.amount)) %>%  
  ungroup()

#Se grafica la cantidad de datos existentes según el tipo de Fuel
library(ggthemes)
ggplot(df1, aes(Week.Signed, Signed.amount.cumsum, fill = Sector))+
  geom_area(alpha = 0.8, colour = 'darkblue') +
  theme_simpsons(title.font = "Lucida Sans Unicode",
                 text.font = "Akbar")+
  scale_x_date(breaks = seq(min(df1$Week.Signed), max(df1$Week.Signed), "1 month"),
               date_labels = "%b")+
  scale_y_continuous(labels = scales::dollar)+
  scale_fill_simpsons() +
  labs(y = "Acumulador en millones de $ americanos",
       x = "2023",
       title = "¿Qué sector está marcando la diferencia en la lucha contra el cambio climático?",
       caption = "Cristian Guerrero Balber| Datos: used_cars_data.csv (kaggle)")
```

**Audiencia:** Conferencia sobre Energía sostenible

**Objetivo:** Mostrar las principales áreas económicas que aportan financiación en la lucha contra el cambio climático según un acuerdo firmado en 2015 por la Asian Development Bank (ADB).

**Visualización:** Se usa *RStudio* con *ggplot*. Se importa un estilo muy original de películas, en este caso, de los simpson, para mostrar unas áreas apiladas por sector de la aportación en dólares americanos.

**Conjunto de datos:** Se preprocesan los datos limpiando de nulos, agrupando por fechas y sectores, así como calculando los acumulados aportados por sector y fecha. Fuente: https://data.adb.org/dataset/climate-change-financing-adb

## Categoría: "Timeseries"

### Día 19: Dinosaurs

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 20: Correlation

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 21: Green Energy

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 22: Mobility

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 23: Tiles

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 24: ILO Region for Africa (data day)

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

## Categoría: "Uncertainties"

### Día 25: Global Change

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 26: AI

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 27: Good/Bad

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 28: Trend

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 29: Black'n'White

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

### Día 30: FiveThirtyEight (theme day)

**Audiencia:**\
**Objetivo:**\
**Visualización:**\
**Conjunto de datos:**

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>

<iframe title="Net Worth (in billions) by Industry" aria-label="Bar Chart" id="datawrapper-chart-SpQmI" src="https://datawrapper.dwcdn.net/SpQmI/1/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="395" data-external="1">

</iframe>

<script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>
